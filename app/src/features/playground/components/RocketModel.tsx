import React, {useRef} from "react";

import {useGLTF} from '@react-three/drei';
import {Mesh} from "three";
import ParticleSystem from "@/features/core/components/ParticleSystem";


const PATH = 'models/rocket_model/Rocket_Ship_01.gltf';


// const RocketModel = (props: any) => {
//     const gltf = useLoader(GLTFLoader, PATH);
//     return (
//         <Suspense fallback={null}>
//             <primitive {...props} object={gltf.scene}/>
//         </Suspense>
//     );
// };


// Auto-generated by: https://github.com/pmndrs/gltfjsx
const RocketModel = (props: any) => {
    const group = useRef();
    const {nodes, materials} = useGLTF(PATH);
    // ?
    const meshes: Mesh[] = [
        nodes['buffer-0-mesh-0'] as Mesh,
        nodes['buffer-0-mesh-0_1'] as Mesh,
        nodes['buffer-0-mesh-0_2'] as Mesh,
        nodes['buffer-0-mesh-0_3'] as Mesh,
        nodes['buffer-0-mesh-0_4'] as Mesh
    ];

    return (
        <group ref={group} {...props} dispose={null}>
            <mesh
                castShadow={true}
                receiveShadow={true}
                geometry={meshes[0].geometry}
                material={materials.F44336}
            />
            <mesh
                castShadow={true}
                receiveShadow={true}
                geometry={meshes[1].geometry}
                material={materials.FFFFFF}
            />
            <mesh
                castShadow={true}
                receiveShadow={true}
                geometry={meshes[2].geometry}
                material={materials['455A64']}
            />
            <mesh
                castShadow={true}
                receiveShadow={true}
                geometry={meshes[3].geometry}
                material={materials['78909C']}
            />
            <mesh
                castShadow={true}
                receiveShadow={true}
                geometry={meshes[4].geometry}
                material={materials['80DEEA']}
            />
            <ParticleSystem />
        </group>
    );
};
useGLTF.preload(PATH);


export default RocketModel;
