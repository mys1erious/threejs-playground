/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: DAVID.3D.ART (https://sketchfab.com/david3dart)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/adventure-core-from-portal-2-original-6ad4806f0f5c4d2ca2dd0f840f1c3a88
title: Adventure Core - from portal 2 (original)
*/


import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import {SkinnedMesh} from "three";


const PATH = 'models/adventure_core/scene.gltf';


export default function AdventureCoreModel(props: any) {
    const group = useRef();
    const { nodes, materials } = useGLTF(PATH);
    // Find a better way ?
    const skinnedMeshes: SkinnedMesh[] = [
        nodes.Object_8 as SkinnedMesh,
        nodes.Object_9 as SkinnedMesh,
        nodes.Object_7 as SkinnedMesh
    ];

    return (
        <group ref={group} {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, 0]}>
                <group rotation={[Math.PI / 2, 0, 0]}>
                    <primitive object={nodes._rootJoint} />
                    <skinnedMesh
                        geometry={skinnedMeshes[0].geometry}
                        material={materials.personality_sphere_glass}
                        skeleton={skinnedMeshes[0].skeleton}
                    />
                    <skinnedMesh
                        geometry={skinnedMeshes[1].geometry}
                        material={materials.personality_sphere_light_damaged}
                        skeleton={skinnedMeshes[1].skeleton}
                    />
                    <skinnedMesh
                        geometry={skinnedMeshes[2].geometry}
                        material={materials.personality_sphere}
                        skeleton={skinnedMeshes[2].skeleton}
                    />
                </group>
            </group>
        </group>
    );
};

useGLTF.preload(PATH);
